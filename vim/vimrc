set nocompatible               " choose no compatibility with legacy vi
set encoding=utf-8             " open file with encoding
set fileencoding=utf-8         " save file with encoding
set fileformats=unix,dos,mac   " use Unix as the standard file type
set nobackup                   " do not keep backup files
set noswapfile                 " do not write intermediate swap files
set nowrap                     " don't wrap lines
set number                     " display line numbers on the left
set cursorline                 " highlight current line
set autoread                   " when a file is changed from the outside
set lazyredraw                 " don't redraw while executing macros
set history=1000               " how many lines of history VIM has to remember
set title                      " change the terminal's title
set visualbell                 " don't beep
set noerrorbells               " don't beep
set ruler                      " always show current position
set mouse=a                    " enable using the mouse if terminal emulator supports it
set virtualedit=all            " moving beyond the end of a line
set showcmd                    " display incomplete commands
set laststatus=2               " show status line

set wildmenu                   " make tab completion for files/buffers act like bash
set wildmode=list:full         " show a list when pressing tab and complete first full match
set wildignore=*.swp,*.bak,*.pyc,*.class

set splitbelow                 " splitting a window will put the new window below the current one
set splitright                 " splitting a window will put the new window right of the current one

"
" Use pathogen to easily modify the runtime path to include all plugins under the ~/.vim/bundle directory
"
filetype off                   " force reloading after pathogen loaded
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()
filetype plugin indent on      " enable file type detection, plugins and indentation
syntax enable                  " enable syntax highlighting

"
"  Whitespace settings
"
set tabstop=4                  " spaces per tab
set softtabstop=4              " when hitting <BS>, pretend like a tab is removed, even if spaces
set shiftwidth=4               " number of spaces to use for autoindenting
set shiftround                 " use multiple of shiftwidth when indenting with '<' and '>'
set expandtab                  " spaces instead of tabs
set smarttab                   " use shiftwidth to enter tabs
set autoindent                 " automatically indent to match adjacent lines
set smartindent
set nolist                     " hide whitespace characters
set listchars=tab:▸\ ,trail:•,eol:¬  " how to show 'invisible' characters
set linebreak
let &showbreak='↪ '            " string to put at the start of lines that have been wrapped
set backspace=indent,eol,start " configure backspace so it acts as it should act

set showmatch                  " show matching brackets when text indicator is over them
set matchtime=2                " tens of a second to show matching parentheses
set hlsearch                   " highlight matches
set incsearch                  " incremental searching
set ignorecase                 " searches are case insensitive
set smartcase                  "   unless they contain at least one capital letter
set magic                      " for regular expressions turn magic on
set gdefault                   " global search by default: :%s/pattern/replacement/g

let mapleader=","

"
" Status line
"
"set statusline=%<%f\ (%{&ft})\ %-4(%m%)%=%-19(%3l,%02c%03V%)

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.whitespace = 'Ξ'

"
"  GUI/Terminal specific settings
"
if has("gui_running")          " GUI is running or is about to start
  set guioptions-=T            " remove toolbar from gvim
  set guioptions-=l            " remove left scrollbar
  set guioptions-=L            "   when there is a vertically	split window
  set guioptions-=r            " remove right scrollbar
  set guioptions-=R            "   when there is a vertically	split window

  set lines=45 columns=140     " maximize gvim window
  set guifont=Menlo:h14        " favorite GUI font
  set background=light
  colorscheme solarized        " GUI color scheme
  call togglebg#map("<F5>")    " toggle background (light/dark)
else                           " this is console Vim
  set t_Co=256                 " 256 colors
  set background=dark
  colorscheme grb256           " terminal color scheme

  if exists("+lines")
    set lines=42
  endif
  if exists("+columns")
    set columns=140
  endif
endif

"set winwidth=84
"set winheight=5
"set winminheight=5
"set winheight=999
